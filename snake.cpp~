#include <ncurses.h>
#include <cstdlib>
#include <list>
#include <ctime>

using namespace std;

enum dir {
  UP,
  DOWN,
  LEFT,
  RIGHT
};

int main(int argc, char* argv[]){
  initscr();
  srand(time(0));
  timeout(300);
  bool game = true;
  int ball_x = 7, ball_y = 5;
  list<int> x = {0,1,2,3,4};
  list<int> y = {0,0,0,0,0};
  
  dir dirx = LEFT;
  int c = 0;
  int head_x = 4, head_y = 0;
  int prev_x = 3, prev_y = 0;

  WINDOW* win = newwin(21, 31, 5, 10);
  
  int j;
  int score = 0;
  int col = -1;
  while(game){
    switch(c){
    case 119:
      if(dirx != DOWN)
	dirx = UP;
      break;
    case 115:
      if(dirx != UP)
	dirx = DOWN;
      break;
    case 100:
      if(dirx != RIGHT)
	dirx = LEFT;
      break;
    case 97:
      if(dirx != LEFT)
	dirx = RIGHT;
      break;
    default:
      break;
    }
    
    prev_x = head_x;
    prev_y = head_y;
    switch(dirx){
    case LEFT:
      head_x = prev_x + 1;
      head_y = prev_y;
      x.push_back(head_x);
      y.push_back(head_y);
      break;
    case RIGHT:
      head_x = prev_x - 1;
      head_y = prev_y;
      x.push_back(head_x);
      y.push_back(head_y);
      break;
    case DOWN:
      head_y = prev_y + 1;
      head_x = prev_x;
      y.push_back(head_y);
      x.push_back(head_x);
      break;
    case UP:
      head_y = prev_y - 1;
      head_x = prev_x;
      y.push_back(head_y);
      x.push_back(head_x);
      break;
    }
    y.pop_front();
    x.pop_front();

    box(win, 0, 0);
    refresh();
    wrefresh(win);
    mvwprintw(win, ball_y, ball_x, "O");
    mvwprintw(win, 19, 10, "Score: %d", score);
    
    col = -1;
    for(int i=0; i<x.size(); i++){
      mvwprintw(win, *next(y.begin(), i), *next(x.begin(), i), "X");
      if(*next(y.begin(), i) == y.back() && *next(x.begin(), i) == x.back()) col++;
      j--;
    }
    
    if(col>0) game = false;

    if(*next(y.end(), -1) == ball_y && *next(x.end(), -1) == ball_x){
      score++;
      x.push_front(*next(x.begin(), 1));
      y.push_front(*next(y.begin(), 1));
      ball_y = rand() % 19;
      ball_x = rand() % 30;
    }

    wrefresh(win);
    refresh();
    //usleep(200*1000);
    c = getch();
    
    wclear(win);
    clear();
  }

  WINDOW* game_over_win = newwin(5, 15, 10, 15);
  refresh();
  //while(true){
  box(game_over_win, 0, 0);
  wmove(game_over_win, 2, 3);
  wprintw(game_over_win, "Game over");
  wrefresh(game_over_win);
    //sleep(10);
  //wclear(game_over_win);
  timeout(-1);
  getch();

  endwin();

  return 0;
}
